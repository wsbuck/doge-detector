{"version":3,"sources":["dog.jpg","components/ImageContainer.js","components/Input.js","components/PredictionOutput.js","components/InfoButton.js","components/Header.js","serviceWorker.js","ui/theme/index.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","root","width","padding","spacing","marginLeft","marginRight","marginTop","marginBottom","maxWidth","ImageContainer","props","snapShotCanvas","document","createElement","classes","image","cameraStatus","vid","querySelector","video","navigator","mediaDevices","getUserMedia","audio","facingMode","then","stream","srcObject","catch","error","console","log","startStream","currentStream","height","videoHeight","videoWidth","getContext","drawImage","img","toDataURL","getTracks","forEach","track","stop","getImage","stopStream","react_default","a","Paper","className","color","alt","autoPlay","playsInline","src","text","appBar","justifyContent","display","top","bottom","grow","flexGrow","fabButton","zIndex","margin","Input","modelLoaded","Fragment","AppBar","position","Toolbar","Fab","aria-label","onClick","updateCamera","PhotoCamera_default","predict","disabled","Pets_default","CircularProgress","overflowX","table","cell","PredictionOutput","prediction","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","value","index","key","component","scope","parseFloat","probability","toFixed","bodyText","& a","InfoButton","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","IconButton","Info_default","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","href","DialogActions","Button","title","Header","Typography","variant","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","createMuiTheme","palette","primary","main","secondary","background","default","overrides","MuiPaper","backgroundColor","MuiTableCell","borderBottom","head","body","ReactDOM","render","ThemeProvider","CssBaseline","_useState","doggo","_useState2","setImage","_useState3","_useState4","setCameraStatus","_useState5","_useState6","modelStatus","setModelStatus","_useState7","_useState8","model","setModel","_useState9","_useState10","setPrediction","_loadModel","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","tf","sent","t0","save","data","dispose","abrupt","apply","this","arguments","getTopKClasses","_x","_x2","_getTopKClasses","_callee2","logits","topK","values","valuesAndIndices","i","topKValues","topKIndices","_i","topClassesAndProbs","percentageSum","_i2","_context2","length","push","sort","b","Float32Array","Int32Array","outputClasses","_predict","_callee3","imgElement","_context3","fromPixels","resizeNearestNeighbor","toFloat","offset","batched","sub","div","reshape","useEffect","loadModel","loadedModel","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d6c5a3bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dog.1afd5e79.jpg\";","import React from 'react';\n\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '95%',\n    padding: theme.spacing(1),\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    // background: '#37474f',\n    maxWidth: '600px',\n  },\n}));\n\nexport default function ImageContainer(props) {\n  const snapShotCanvas = document.createElement('canvas');\n  // const IMAGE_WIDTH = 300;\n  // const IMAGE_HEIGHT = 300;\n  // const [currentStream, setCurrentStream] = useState(null);\n  // eslint-disable-next-line no-unused-vars\n  let currentStream = null;\n  const classes = useStyles();\n\n  function startStream() {\n    var constraints = {\n      audio: false,\n      video: { facingMode: 'environment' }\n    };\n    const video = document.querySelector('video');\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(stream => {\n        // setCurrentStream(stream);\n        currentStream = stream;\n        video.srcObject = stream;\n        return stream;\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  function stopStream(vid) {\n    if (vid.srcObject) {\n      const currentStream = vid.srcObject;\n      console.log('ok');\n      snapShotCanvas.height = vid.videoHeight;\n      snapShotCanvas.width = vid.videoWidth;\n      // snapShotCanvas.height = IMAGE_HEIGHT;\n      // snapShotCanvas.width = IMAGE_WIDTH;\n      snapShotCanvas.getContext('2d').drawImage(\n        vid,\n        0,\n        0,\n        snapShotCanvas.width,\n        snapShotCanvas.height\n      )\n      let img = snapShotCanvas.toDataURL(\"image/png\");\n      currentStream.getTracks().forEach(track => {\n        track.stop();\n      });\n      vid.srcObject = null;\n      props.getImage(img);\n    }\n  }\n\n  const { image, cameraStatus } = props;\n  const vid = document.querySelector('video');\n\n  if (cameraStatus) {\n    startStream(vid);\n  } else if (vid) {\n    stopStream(vid);\n  }\n\n\n  return (\n    <Paper className={classes.root} color='primary'>\n      <video\n        alt=\"doggo\"\n        className={cameraStatus ? \"doggo-images\" : \"hidden\"}\n        autoPlay\n        playsInline\n      />\n      <img \n        src={image} alt=\"doggo\" \n        className={!cameraStatus ? \"doggo-images\" : \"hidden\"}\n      />\n    </Paper>\n    // <div className=\"doggo-image-container\">\n    //   <video\n    //     alt=\"doggo\"\n    //     className={cameraStatus ? \"doggo-image\" : \"hidden\"}\n    //     autoPlay\n    //     playsInline\n    //   />\n    //   <img src={image} alt=\"doggo\" className=\"doggo-image\" />\n    // </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport Pets from '@material-ui/icons/Pets';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n// import { isInWebAppiOS, isiOS, isSafari } from '../utils';\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  appBar: {\n    justifyContent: 'center',\n    display: 'grid',\n    top: 'auto',\n    bottom: 0,\n    padding: 0,\n    height: '6%',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    display: 'grid',\n    zIndex: 1,\n    top: -30,\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function Input(props) {\n  const classes = useStyles();\n  const { modelLoaded, cameraStatus } = props;\n  \n  // function handleImage(event) {\n  //   props.getImage(URL.createObjectURL(event.target.files[0]))\n  // }\n\n  function handlePredict() {\n    if (!cameraStatus) {\n      props.predict()\n    }\n  }\n\n  function handleCamera() {\n    props.updateCamera(!cameraStatus);\n  }\n\n  return (\n    <>\n      <AppBar position='fixed' color='primary' className={classes.appBar}>\n        <Toolbar>\n          <Fab \n            color=\"secondary\" aria-label=\"add\" \n            className={classes.fabButton} onClick={handleCamera}\n          >\n            <PhotoCamera />\n          </Fab>\n          <Fab \n            color=\"secondary\" aria-label=\"add\" \n            className={classes.fabButton} onClick={handlePredict}\n            disabled={!modelLoaded}\n          >\n            {modelLoaded ? <Pets /> : <CircularProgress color=\"secondary\" />}\n          </Fab>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '95%',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: 600,\n    marginTop: theme.spacing(3),\n    marginBottom: 100,\n    overflowX: 'auto',\n    // background: '#37474f',\n  },\n  table: {\n    maxWidth: 600,\n  },\n  cell: {\n    color: 'white',\n  }\n}));\n\n\nexport default function PredictionOutput(props) {\n  const classes = useStyles();\n\n  function buildTable() {\n    return (\n      <Paper className={classes.root}>\n        <Table className={classes.table} size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Breed</TableCell>\n              <TableCell align=\"right\">Probability</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.prediction.map((value, index) => (\n              <TableRow key={value.className}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {value.className}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {parseFloat(value.probability * 10000 / 100).toFixed(2)}%\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Paper>\n    );\n  }\n\n  return props.prediction ? buildTable() : \"\";\n\n}","import React from 'react';\n\nimport { DialogTitle, DialogActions } from '@material-ui/core';\nimport { DialogContent, DialogContentText } from '@material-ui/core';\nimport { Dialog, Button } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Info from '@material-ui/icons/Info';\n\nconst useStyles = makeStyles(theme => ({\n  bodyText: {\n    color: 'white',\n    '& a': {\n      color: '#FFAB91',\n    },\n  },\n}));\n\nexport default function InfoButton() {\n  const [open, setOpen] = React.useState(false);\n  const classes = useStyles();\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <IconButton\n        color='secondary' aria-label='Information'\n        onClick={handleClickOpen}\n      >\n        <Info />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>Hello!</DialogTitle>\n        <DialogContent>\n          <DialogContentText \n            id='alert-dialog-description' \n            className={classes.bodyText}>\n            This is made with tensorflow.js and React.\n            The model is mobilenet retrained only on the dogs of ImageNet.\n            The code for this project can be found <a href=\"https://github.com/wsbuck/doge-detector\">here</a> and the tensorflow model is <a href=\"https://github.com/wsbuck/DogeNetTFModel\">here</a>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nimport InfoButton from './InfoButton';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    // backgroundColor: '#ec6c03',\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} position='static' color='primary'>\n        <Toolbar>\n          <Typography variant='h6' color='inherit' className={classes.title}>\n            Doge Detector\n          </Typography>\n          <InfoButton />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// const primaryColor = '#37474f';\nconst primaryColor = '#424242';\nconst secondaryColor = '#FFAB91';\n// const bgColor = '#102027';\nconst bgColor = '#212121';\nconst textColor = '#eeeeee';\n\nexport default createMuiTheme({\n  palette: {\n    primary: { main: primaryColor },\n    secondary: { main: secondaryColor },\n    background: { default: bgColor },\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        backgroundColor: primaryColor,\n        color: textColor,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: '1px solid rgba(81, 81, 81, 1)',\n      },\n      head: {\n        color: 'white',\n      },\n      body: {\n        color: textColor,\n      },\n    },\n  },\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport theme from './ui/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider >\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport doggo from './dog.jpg'\nimport outputClasses from './tfjs/outputClasses.json';\n\nimport * as tf from '@tensorflow/tfjs';\n\nimport ImageContainer from './components/ImageContainer';\nimport Input from './components/Input';\nimport PredictionOutput from './components/PredictionOutput';\nimport Header from './components/Header';\n\n// import useCamera from './hooks/useCamera';\n\n\nexport default function App() {\n  const [image, setImage] = useState(doggo);\n  const [cameraStatus, setCameraStatus] = useState(false);\n  const [modelStatus, setModelStatus] = useState(false);\n  const [model, setModel] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  \n  useEffect(() => {\n    loadModel()\n      .then((loadedModel => {\n        setModel(loadedModel);\n        setModelStatus(true);\n      }))\n  }, []);\n\n  async function loadModel() {\n    let model;\n    try {\n      model = await tf.loadLayersModel('indexeddb://model');\n      console.log('model loaded');\n    } catch(err) {\n      const modelURL = \"https://s3-us-west-1.amazonaws.com/wsbuck/tfjs/model.json\";\n      model = await tf.loadLayersModel(modelURL);\n      await model.save('indexeddb://model');\n    }\n    const result = tf.tidy(() => model.predict(tf.zeros([1, 224, 224, 3])));\n    await result.data();\n    result.dispose();\n    return model;\n  }\n\n  function getImage(img) {\n    setImage(img);\n  }\n\n  // function preprocessImage(img) {\n  //   let tensor = tf.browser.fromPixels(img)\n  //     .resizeNearestNeighbor([224, 224])\n  //     .toFloat();\n\n  //   let offset = tf.scalar(127.5);\n  //   return tensor.sub(offset)\n  //     .div(offset)\n  //     .expandDims();\n  // }\n\n  async function getTopKClasses(logits, topK) {\n    const values = await logits.data();\n    const valuesAndIndices = [];\n    for (let i = 0; i < values.length; i++) {\n      valuesAndIndices.push({ value: values[i], index: i});\n    }\n\n    valuesAndIndices.sort((a, b) => {\n      return b.value - a.value;\n    });\n    const topKValues = new Float32Array(topK);\n    const topKIndices = new Int32Array(topK);\n    for (let i = 0; i < topK; i++) {\n      topKValues[i] = valuesAndIndices[i].value;\n      topKIndices[i] = valuesAndIndices[i].index;\n    }\n\n    const topClassesAndProbs = [];\n    let percentageSum = 0.00;\n    for (let i = 0; i < topKIndices.length; i++) {\n      percentageSum += topKValues[i];\n      topClassesAndProbs.push({\n        className: outputClasses[topKIndices[i]],\n        probability: topKValues[i]\n      });\n    }\n    topClassesAndProbs.push({\n      className: \"Other\",\n      probability: 1.00 - percentageSum\n    });\n    return topClassesAndProbs;\n  }\n\n  async function predict() {\n    const imgElement = document.querySelector('img');\n    const logits = tf.tidy(() => {\n      // tf.browser.fromPixels() returns a Tensor from an image element.\n      const img = tf.browser.fromPixels(imgElement)\n        .resizeNearestNeighbor([224, 224])\n        .toFloat();\n      const offset = tf.scalar(127.5);\n      // Normalize the image from [0, 255] to [-1, 1].\n      const normalized = img.sub(offset).div(offset);\n      // Reshape to a single-element batch so we can pass it to predict.\n      const batched = normalized.reshape([1, 224, 224, 3]);\n      // Make a prediction through mobilenet.\n      console.log(model);\n      return model.predict(batched);\n    });\n    const classes = await getTopKClasses(logits, 3);\n    setPrediction(classes);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <ImageContainer\n        image={image}\n        cameraStatus={cameraStatus}\n        getImage={getImage}\n      />\n      <PredictionOutput\n        prediction={prediction}\n      />\n      <Input\n        updateCamera={setCameraStatus}\n        cameraStatus={cameraStatus}\n        predict={predict}\n        modelLoaded={modelStatus}\n        getImage={getImage}\n      />\n    </div>\n  );\n}"],"sourceRoot":""}