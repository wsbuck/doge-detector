{"version":3,"sources":["dog.jpg","components/ImageContainer.js","components/Input.js","components/PredictionOutput.js","components/InfoButton.js","components/Header.js","App.js","serviceWorker.js","ui/theme/index.js","index.js"],"names":["module","exports","__webpack_require__","p","ImageContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentStream","startStream","bind","assertThisInitialized","stopStream","snapShotCanvas","document","createElement","IMAGE_WIDTH","IMAGE_HEIGHT","_this2","video","querySelector","navigator","mediaDevices","getUserMedia","audio","facingMode","then","stream","srcObject","catch","error","console","log","height","videoWidth","width","videoHeight","getContext","drawImage","img","toDataURL","getTracks","forEach","track","stop","getImage","image","camera","react_default","a","className","alt","autoPlay","playsInline","src","Component","useStyles","makeStyles","theme","text","padding","spacing","appBar","justifyContent","display","top","bottom","grow","flexGrow","fabButton","zIndex","margin","Input","classes","modelLoaded","Fragment","AppBar","position","color","Toolbar","Fab","aria-label","onClick","updateCamera","PhotoCamera_default","predict","disabled","Pets_default","PredictionOutput","prediction","map","value","index","key","parseFloat","probability","toFixed","InfoButton","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","handleClose","IconButton","Info_default","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","href","DialogActions","Button","root","title","marginLeft","Header","Typography","variant","App","doggo","loadModel","data","setState","outputClasses","tf","model","result","dispose","tensor","fromPixels","resizeNearestNeighbor","toFloat","offset","sub","div","expandDims","logits","topK","values","valuesAndIndices","i","length","push","sort","b","topkValues","Float32Array","topkIndices","Int32Array","topClassesAndProbs","percentageSum","imgElement","batched","reshape","_this3","getTopKClasses","components_ImageContainer","components_PredictionOutput","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","createMuiTheme","palette","primary","main","secondary","background","default","themeName","ReactDOM","render","ThemeProvider","CssBaseline","src_App_0","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5e03eca9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dog.1afd5e79.jpg\";","import React, { Component } from 'react';\n\nclass ImageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentStream: null\n    };\n    this.startStream = this.startStream.bind(this);\n    this.stopStream = this.stopStream.bind(this);\n    this.currentStream = null;\n    this.snapShotCanvas = document.createElement('canvas');\n    this.IMAGE_WIDTH = 300;\n    this.IMAGE_HEIGHT = 300;\n  }\n\n  //componentWillUpdate() {\n  //  console.log('updated');\n  //}\n\n  startStream() {\n    var constraints = {\n      audio: false,\n      video: { facingMode: 'environment' }\n    };\n    const video = document.querySelector('video');\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then(stream => {\n        this.currentStream = stream;\n        video.srcObject = stream;\n        return stream;\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n  stopStream() {\n    if (this.currentStream) {\n      const video = document.querySelector('video');\n      this.snapShotCanvas.height = video.videoWidth;\n      this.snapShotCanvas.width = video.videoHeight;\n      this.snapShotCanvas.height = this.IMAGE_HEIGHT;\n      this.snapShotCanvas.width = this.IMAGE_WIDTH;\n      this.snapShotCanvas.getContext('2d').drawImage(\n        video,\n        0,\n        0,\n        this.snapShotCanvas.width, this.snapShotCanvas.height)\n      let img = this.snapShotCanvas.toDataURL(\"image/png\");\n      //this.props.getImage(this.snapShotCanvas.toDataURL(\"image/webp\"));\n      this.currentStream.getTracks().forEach(track => {\n        track.stop();\n      });\n      this.currentStream = null;\n      this.props.getImage(img);\n    }\n  }\n\n  render() {\n    const { image } = this.props;\n    const { camera } = this.props;\n    if (camera) {\n      this.startStream();\n    } else {\n      this.stopStream();\n    }\n\n    return (\n      <div className=\"doggo-image-container\">\n        <video\n          alt=\"doggo\"\n          className={camera ? \"doggo-image\" : \"hidden\"}\n          autoPlay\n          playsInline\n        />\n        <img src={image} alt=\"doggo\" className=\"doggo-image\" />\n      </div>\n    )\n  }\n}\n\nexport default ImageContainer;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fab from '@material-ui/core/Fab';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport Pets from '@material-ui/icons/Pets';\n\n// import { isInWebAppiOS, isiOS, isSafari } from '../utils';\n\nconst useStyles = makeStyles(theme => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  appBar: {\n    justifyContent: 'center',\n    display: 'grid',\n    top: 'auto',\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    display: 'grid',\n    zIndex: 1,\n    top: -30,\n    margin: theme.spacing(2),\n  },\n}));\n\nexport default function Input(props) {\n  const classes = useStyles();\n  const { modelLoaded, camera } = props;\n  \n  // function handleImage(event) {\n  //   props.getImage(URL.createObjectURL(event.target.files[0]))\n  // }\n\n  function handlePredict() {\n    if (!props.camera) {\n      props.predict()\n    }\n  }\n\n  function handleCamera() {\n    props.updateCamera(!camera);\n  }\n\n  return (\n    <>\n      <AppBar position='fixed' color='primary' className={classes.appBar}>\n        <Toolbar>\n          <Fab \n            color=\"secondary\" aria-label=\"add\" \n            className={classes.fabButton} onClick={handleCamera}\n          >\n            <PhotoCamera />\n          </Fab>\n          <Fab \n            color=\"secondary\" aria-label=\"add\" \n            className={classes.fabButton} onClick={handlePredict}\n            disabled={!modelLoaded}\n          >\n            <Pets />\n          </Fab>\n          <div className={classes.grow} />\n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}","import React, { Component } from 'react';\n\nclass PredictionOutput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  createTable() {\n\n  }\n\n  render() {\n    const { prediction } = this.props;\n    return (\n      prediction\n        ? (\n          <div className={prediction ? \"card\" : \"hidden\"}>\n            <table>\n              <tbody>\n                {prediction.map((value, index) => {\n                  return (\n                    <tr key={index}>\n                      <th className=\"pred-object\">{value.className}</th>\n                      <th className=\"pred-percent\">\n                        {parseFloat(value.probability * 10000 / 100).toFixed(2)}%\n                        </th>\n                    </tr>\n                  )\n                })}\n              </tbody>\n            </table>\n          </div >\n        )\n        : \"\"\n    )\n  }\n}\n\nexport default PredictionOutput;","import React from 'react';\n\nimport { DialogTitle, DialogActions } from '@material-ui/core';\nimport { DialogContent, DialogContentText } from '@material-ui/core';\nimport { Dialog, Button } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\n\nimport Info from '@material-ui/icons/Info';\n\nexport default function InfoButton() {\n  const [open, setOpen] = React.useState(false);\n  // const classes = useStyles();\n\n  function handleClickOpen() {\n    setOpen(true);\n  }\n\n  function handleClose() {\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <IconButton\n        color='inherit' aria-label='Information'\n        onClick={handleClickOpen}\n      >\n        <Info />\n      </IconButton>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>Hello!</DialogTitle>\n        <DialogContent>\n          <DialogContentText id='alert-dialog-description'>\n            This is made with tensorflow.js and React.\n            The model is mobilenet retrained only on the dogs of ImageNet.\n            The code for this project can be found <a href=\"https://github.com/wsbuck/doge-detector\">here</a> and the tensorflow model is <a href=\"https://github.com/wsbuck/DogeNetTFModel\">here</a>.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color='primary'>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\n\nimport InfoButton from './InfoButton';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appBar: {\n    // backgroundColor: '#ec6c03',\n  },\n  title: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.appBar} position='static' color='primary'>\n        <Toolbar>\n          <Typography variant='h6' color='inherit' className={classes.title}>\n            Doge Detector\n          </Typography>\n          <InfoButton />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, { Component } from 'react';\nimport './App.css';\nimport doggo from './dog.jpg'\nimport outputClasses from './tfjs/outputClasses.json';\n\nimport * as tf from '@tensorflow/tfjs';\n\nimport ImageContainer from './components/ImageContainer';\nimport Input from './components/Input';\nimport PredictionOutput from './components/PredictionOutput';\nimport Header from './components/Header';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: doggo,\n      camera: false,\n      modelLoaded: false,\n      prediction: null\n    };\n    this.updateCamera = this.updateCamera.bind(this);\n    this.getImage = this.getImage.bind(this);\n    this.predict = this.predict.bind(this);\n    this.loadModel = this.loadModel.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadModel();\n  }\n\n  updateCamera(data) {\n    this.setState({ camera: data })\n  }\n\n  async loadModel() {\n    this.outputClasses = outputClasses;\n    this.model = await tf.loadLayersModel(\"https://s3-us-west-1.amazonaws.com/wsbuck/tfjs/model.json\");\n    this.setState({ modelLoaded: true });\n    const result = tf.tidy(\n      () => this.model.predict(tf.zeros(\n        [1, 224, 224, 3])));\n    await result.data();\n    result.dispose();\n  }\n\n  getImage(img) {\n    this.setState({ image: img })\n  }\n\n  preprocessImage(img) {\n    let tensor = tf.browser.fromPixels(img)\n      .resizeNearestNeighbor([224, 224])\n      .toFloat();\n\n    let offset = tf.scalar(127.5);\n    return tensor.sub(offset)\n      .div(offset)\n      .expandDims();\n\n  }\n\n  async getTopKClasses(logits, topK) {\n    const values = await logits.data();\n\n    const valuesAndIndices = [];\n    for (let i = 0; i < values.length; i++) {\n      valuesAndIndices.push({ value: values[i], index: i });\n    }\n    valuesAndIndices.sort((a, b) => {\n      return b.value - a.value;\n    });\n    const topkValues = new Float32Array(topK);\n    const topkIndices = new Int32Array(topK);\n    for (let i = 0; i < topK; i++) {\n      topkValues[i] = valuesAndIndices[i].value;\n      topkIndices[i] = valuesAndIndices[i].index;\n    }\n\n    const topClassesAndProbs = [];\n    let percentageSum = 0.00;\n    for (let i = 0; i < topkIndices.length; i++) {\n      percentageSum += topkValues[i];\n      topClassesAndProbs.push({\n        className: this.outputClasses[topkIndices[i]],\n        probability: topkValues[i]\n      })\n    }\n    topClassesAndProbs.push({\n      className: \"Other\",\n      probability: 1.00 - percentageSum\n    });\n    return topClassesAndProbs;\n  }\n\n  async predict() {\n    const imgElement = document.querySelector('img');\n    const logits = tf.tidy(() => {\n      // tf.browser.fromPixels() returns a Tensor from an image element.\n      const img = tf.browser.fromPixels(imgElement)\n        .resizeNearestNeighbor([224, 224])\n        .toFloat();\n      const offset = tf.scalar(127.5);\n      // Normalize the image from [0, 255] to [-1, 1].\n      const normalized = img.sub(offset).div(offset);\n      // Reshape to a single-element batch so we can pass it to predict.\n      const batched = normalized.reshape([1, 224, 224, 3]);\n      // Make a prediction through mobilenet.\n      return this.model.predict(batched);\n    });\n    const classes = await this.getTopKClasses(logits, 3);\n    this.setState({ prediction: classes })\n    //console.log(classes);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <ImageContainer\n          image={this.state.image}\n          camera={this.state.camera}\n          getImage={this.getImage}\n        />\n        <PredictionOutput\n          prediction={this.state.prediction}\n        />\n        <Input\n          updateCamera={this.updateCamera}\n          camera={this.state.camera}\n          predict={this.predict}\n          modelLoaded={this.state.modelLoaded}\n          getImage={this.getImage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst palette = {\n  primary: { main: '#37474f' },\n  secondary: { main: '#FFAB91' },\n  background: { default: '#102027' }\n};\nconst themeName = 'Cutty Sark Mona Lisa Ostracod';\n\nexport default createMuiTheme({ palette, themeName });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport theme from './ui/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <App />\n  </ThemeProvider >\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\nserviceWorker.register();"],"sourceRoot":""}